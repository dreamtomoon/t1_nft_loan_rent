{
  "address": "0x4Ea17a52482C1d45cC62617D32DA2A4349e18a4b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "AddAvailableCollateralAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "AddAvailableLoanAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "RemoveAvailableCollateralAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "RemoveAvailableLoanAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_setter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_oldLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "SetAutomaticLoanLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_setter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_consumer",
          "type": "address"
        }
      ],
      "name": "SetConsumer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_twap",
          "type": "address"
        }
      ],
      "name": "SetLoanTwapOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_twap",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "SetTwapOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAsset",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addAvailableCollateralAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addAvailableLoanAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "automaticLoanLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interest",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_collateral",
          "type": "bool"
        }
      ],
      "name": "collectInstallment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "consumer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isAvailableCollateralAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isAvailableLoanAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        }
      ],
      "name": "isValidAutomaticLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "removeAvailableCollateralAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "removeAvailableLoanAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "requestETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "requestToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "setAutomaticLoanLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consumer_",
          "type": "address"
        }
      ],
      "name": "setConsumer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_twap",
          "type": "address"
        }
      ],
      "name": "setLoanAssetTwapOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4c8faa50207cce92e230ee40b4887d3f7b54159c070bf4a01a87b5e2b16c2144",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x4Ea17a52482C1d45cC62617D32DA2A4349e18a4b",
    "transactionIndex": 1,
    "gasUsed": "1867074",
    "logsBloom": "0x
    "blockHash": "0x49b672c684b7dcf8954ccd37f38ccf86925e5b3123fd4779aee452aef1663591",
    "transactionHash": "0x4c8faa50207cce92e230ee40b4887d3f7b54159c070bf4a01a87b5e2b16c2144",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 9967458,
        "transactionHash": "0x4c8faa50207cce92e230ee40b4887d3f7b54159c070bf4a01a87b5e2b16c2144",
        "address": "0x4Ea17a52482C1d45cC62617D32DA2A4349e18a4b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x49b672c684b7dcf8954ccd37f38ccf86925e5b3123fd4779aee452aef1663591"
      }
    ],
    "blockNumber": 9967458,
    "cumulativeGasUsed": "1897076",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc778417e063141139fce010982780140aa0cd5ab",
    "0xD4D5c5D939A173b9c18a6B72eEaffD98ecF8b3F6"
  ],
  "solcInputHash": "343c14e48fe02db26db133031df7b26c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"AddAvailableCollateralAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"AddAvailableLoanAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"RemoveAvailableCollateralAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"RemoveAvailableLoanAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"SetAutomaticLoanLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"SetConsumer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_twap\",\"type\":\"address\"}],\"name\":\"SetLoanTwapOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_twap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"SetTwapOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAsset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addAvailableCollateralAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addAvailableLoanAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automaticLoanLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_collateral\",\"type\":\"bool\"}],\"name\":\"collectInstallment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isAvailableCollateralAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isAvailableLoanAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"isValidAutomaticLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"removeAvailableCollateralAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"removeAvailableLoanAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"setAutomaticLoanLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consumer_\",\"type\":\"address\"}],\"name\":\"setConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_twap\",\"type\":\"address\"}],\"name\":\"setLoanAssetTwapOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetManager.sol\":\"AssetManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/IAssetManager.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\nimport \\\"./libraries/TribeOneHelper.sol\\\";\\n\\ncontract AssetManager is Ownable, ReentrancyGuard, IAssetManager {\\n    event AddAvailableLoanAsset(address _sender, address _asset);\\n    event SetLoanTwapOracle(address _asset, address _twap);\\n    event RemoveAvailableLoanAsset(address _sender, address _asset);\\n    event AddAvailableCollateralAsset(address _sender, address _asset);\\n    event RemoveAvailableCollateralAsset(address _sender, address _asset);\\n    event SetConsumer(address _setter, address _consumer);\\n    event SetAutomaticLoanLimit(address _setter, uint256 _oldLimit, uint256 _newLimit);\\n    event TransferAsset(address indexed _requester, address _to, address _token, uint256 _amount);\\n    event WithdrawAsset(address indexed _to, address _token, uint256 _amount);\\n    event SetTwapOracle(address indexed _asset, address _twap, address _user);\\n\\n    mapping(address => bool) private availableLoanAsset;\\n    mapping(address => bool) private availableCollateralAsset;\\n    address private _consumer;\\n    uint256 public automaticLoanLimit = 200; // For now we allows NFTs only below 200 usd price\\n\\n    address public immutable WETH; // This should be uniswap WETH address\\n    address public immutable USDC; // This should be uniswap USDC address\\n    mapping(address => address) twapOracles; // loanAsset => twapOracle\\n\\n    constructor(address _WETH, address _USDC) {\\n        require(_WETH != address(0) && _USDC != address(0), \\\"AssetManager: ZERO address\\\");\\n        // Adding Native coins\\n        availableCollateralAsset[address(0)] = true;\\n        availableLoanAsset[address(0)] = true;\\n        WETH = _WETH;\\n        USDC = _USDC;\\n    }\\n\\n    receive() external payable {}\\n\\n    modifier onlyConsumer() {\\n        require(msg.sender == _consumer, \\\"Not consumer\\\");\\n        _;\\n    }\\n\\n    function consumer() external view returns (address) {\\n        return _consumer;\\n    }\\n\\n    function addAvailableLoanAsset(address _asset) external onlyOwner nonReentrant {\\n        require(!availableLoanAsset[_asset], \\\"Already available\\\");\\n        availableLoanAsset[_asset] = true;\\n        emit AddAvailableLoanAsset(msg.sender, _asset);\\n    }\\n\\n    function removeAvailableLoanAsset(address _asset) external onlyOwner nonReentrant {\\n        require(availableLoanAsset[_asset], \\\"Already removed\\\");\\n        availableLoanAsset[_asset] = false;\\n        emit RemoveAvailableLoanAsset(msg.sender, _asset);\\n    }\\n\\n    function addAvailableCollateralAsset(address _asset) external onlyOwner nonReentrant {\\n        require(!availableCollateralAsset[_asset], \\\"Already available\\\");\\n        availableCollateralAsset[_asset] = true;\\n        emit AddAvailableCollateralAsset(msg.sender, _asset);\\n    }\\n\\n    function removeAvailableCollateralAsset(address _asset) external onlyOwner nonReentrant {\\n        require(availableCollateralAsset[_asset], \\\"Already removed\\\");\\n        availableCollateralAsset[_asset] = false;\\n        emit RemoveAvailableCollateralAsset(msg.sender, _asset);\\n    }\\n\\n    function isAvailableLoanAsset(address _asset) external view override returns (bool) {\\n        return availableLoanAsset[_asset];\\n    }\\n\\n    function isAvailableCollateralAsset(address _asset) external view override returns (bool) {\\n        return availableCollateralAsset[_asset];\\n    }\\n\\n    function setConsumer(address _consumer_) external onlyOwner {\\n        require(_consumer_ != _consumer, \\\"Already set as consumer\\\");\\n        require(_consumer_ != address(0), \\\"ZERO_ADDRESS\\\");\\n        _consumer = _consumer_;\\n\\n        emit SetConsumer(msg.sender, _consumer_);\\n    }\\n\\n    function setLoanAssetTwapOracle(address _asset, address _twap) external onlyOwner nonReentrant {\\n        require(availableLoanAsset[_asset], \\\"AssetManager: Invalid loan asset\\\");\\n        address token0 = ITwapOraclePriceFeed(_twap).token0();\\n        address token1 = ITwapOraclePriceFeed(_twap).token1();\\n        if (_asset == address(0)) {\\n            require((token0 == WETH && token1 == USDC) || (token0 == USDC && token1 == WETH), \\\"AssetManager: Invalid twap\\\");\\n        } else {\\n            require((token0 == _asset && token1 == USDC) || (token0 == USDC && token1 == _asset), \\\"AssetManager: Invalid twap\\\");\\n        }\\n\\n        twapOracles[_asset] = _twap;\\n        emit SetTwapOracle(_asset, _twap, msg.sender);\\n    }\\n\\n    function setAutomaticLoanLimit(uint256 _newLimit) external onlyOwner {\\n        require(automaticLoanLimit != _newLimit, \\\"AssetManager: New value is same as old\\\");\\n        uint256 oldLimit = automaticLoanLimit;\\n        automaticLoanLimit = _newLimit;\\n        emit SetAutomaticLoanLimit(msg.sender, oldLimit, _newLimit);\\n    }\\n\\n    function isValidAutomaticLoan(address _asset, uint256 _amountIn) external view override returns (bool) {\\n        require(availableLoanAsset[_asset], \\\"AssetManager: Invalid loan asset\\\");\\n        uint256 usdcAmount;\\n        if (_asset == USDC) {\\n            usdcAmount = _amountIn;\\n        } else {\\n            address _twap = twapOracles[_asset];\\n            require(_twap != address(0), \\\"AssetManager: Twap oracle was not set\\\");\\n\\n            if (_asset == address(0)) {\\n                _asset = WETH;\\n            }\\n            usdcAmount = ITwapOraclePriceFeed(_twap).consult(_asset, _amountIn);\\n        }\\n\\n        return usdcAmount <= automaticLoanLimit * (10**IERC20Metadata(USDC).decimals());\\n    }\\n\\n    function requestETH(address _to, uint256 _amount) external override onlyConsumer {\\n        require(address(this).balance >= _amount, \\\"Asset Manager: Insufficient balance\\\");\\n        TribeOneHelper.safeTransferETH(_to, _amount);\\n        emit TransferAsset(msg.sender, _to, address(0), _amount);\\n    }\\n\\n    function requestToken(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external override onlyConsumer {\\n        require(IERC20(_token).balanceOf(address(this)) >= _amount, \\\"Asset Manager: Insufficient balance\\\");\\n        TribeOneHelper.safeTransfer(_token, _to, _amount);\\n        emit TransferAsset(msg.sender, _to, _token, _amount);\\n    }\\n\\n    function withdrawAsset(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        require(_to != address(0), \\\"ZERO Address\\\");\\n        if (_token == address(0)) {\\n            _amount = address(this).balance;\\n            TribeOneHelper.safeTransferETH(msg.sender, _amount);\\n        } else {\\n            TribeOneHelper.safeTransfer(_token, msg.sender, _amount);\\n        }\\n\\n        emit WithdrawAsset(_to, _token, _amount);\\n    }\\n\\n    function collectInstallment(\\n        address _currency,\\n        uint256 _amount,\\n        uint256 _interest,\\n        bool _collateral\\n    ) external payable override onlyConsumer {\\n        if (_currency == address(0)) {\\n            require(msg.value == _amount, \\\"Wrong msg.value\\\");\\n        } else {\\n            TribeOneHelper.safeTransferFrom(_currency, msg.sender, address(this), _amount);\\n        }\\n        // We will supplement more detail in V2\\n        // 80% interest will go to Funding pool rewarder contract, 20% wil be burn\\n        // If _collateral is true, then we transfer whole amount to funding pool\\n    }\\n}\\n\",\"keccak256\":\"0x361a0c5133b1d97caa99367672b4a1e54fe972fe6a270e2bfd5f31b2e69c27c0\",\"license\":\"MIT\"},\"contracts/interfaces/IAssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface IAssetManager {\\n    function isAvailableLoanAsset(address _asset) external returns (bool);\\n\\n    function isAvailableCollateralAsset(address _asset) external returns (bool);\\n\\n    function isValidAutomaticLoan(address _asset, uint256 _amountIn) external returns (bool);\\n\\n    function requestETH(address _to, uint256 _amount) external;\\n\\n    function requestToken(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external;\\n\\n    function collectInstallment(\\n        address _currency,\\n        uint256 _amount,\\n        uint256 _interest,\\n        bool _collateral\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9d9b7ae67908df2b2a93206244a7a2322787b8a19ac63fa58c569b4f52c3baec\",\"license\":\"MIT\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function token0() external returns (address);\\n\\n    function token1() external returns (address);\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x6273f350366927486699484adb76dc9eaf33a103193402f78b2890eec547f88e\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TribeOneHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\nlibrary TribeOneHelper {\\n    enum TokenType {\\n        ERC721,\\n        ERC1155\\n    }\\n\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TribeOneHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TribeOneHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TribeOneHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n\\n    function safeTransferAsset(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        if (token == address(0)) {\\n            safeTransferETH(to, value);\\n        } else {\\n            safeTransfer(token, to, value);\\n        }\\n    }\\n\\n    function safeTransferNFT(\\n        address _nft,\\n        address _from,\\n        address _to,\\n        TokenType _type,\\n        uint256 _tokenId\\n    ) internal {\\n        if (_type == TokenType.ERC721) {\\n            IERC721(_nft).safeTransferFrom(_from, _to, _tokenId);\\n        } else {\\n            IERC1155(_nft).safeTransferFrom(_from, _to, _tokenId, 1, \\\"0x00\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev this function calculates expected price of NFT based on created LTV and fund amount,\\n     * LTV: 10000 = 100%; _slippage: 10000 = 100%\\n     */\\n    function getExpectedPrice(\\n        uint256 _fundAmount,\\n        uint256 _LTV,\\n        uint256 _slippage\\n    ) internal pure returns (uint256) {\\n        require(_LTV != 0, \\\"TribeOneHelper: LTV should not be 0\\\");\\n        return (_fundAmount * (10000 + _slippage)) / _LTV;\\n    }\\n}\\n\",\"keccak256\":\"0x220531de717d6dd116529474e0987d15355fd8b66edc9552a21e84faad97042d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c060405260c86005553480156200001657600080fd5b506040516200210338038062002103833981016040819052620000399162000181565b60006200004562000160565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180556001600160a01b03821615801590620000b457506001600160a01b03811615155b620000dc5760405162461bcd60e51b8152600401620000d390620001b8565b60405180910390fd5b600080527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff805460ff19908116600190811790925560026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b805490911690911790556001600160601b0319606092831b8116608052911b1660a052620001ef565b3390565b80516001600160a01b03811681146200017c57600080fd5b919050565b6000806040838503121562000194578182fd5b6200019f8362000164565b9150620001af6020840162000164565b90509250929050565b6020808252601a908201527f41737365744d616e616765723a205a45524f2061646472657373000000000000604082015260600190565b60805160601c60a05160601c611ea96200025a60003960008181610bb601528181610ce301528181610d95015281816110100152818161104c015281816110fb0152611137015260008181610c3d01528181610fd40152818161108801526112190152611ea96000f3fe60806040526004361061012e5760003560e01c80637cad9f80116100ab578063a80c0fcb1161006f578063a80c0fcb14610313578063ad5c464814610333578063b4fd729614610348578063cc1657411461035d578063e9ad871c1461037d578063f2fde38b1461039d57610135565b80637cad9f801461028757806384bc2109146102a957806389a30271146102c95780638d12bec0146102eb5780638da5cb5b146102fe57610135565b80634965162a116100f25780634965162a146101f25780635a59fe121461021257806363a579d5146102325780636f59503f14610252578063715018a61461027257610135565b806303a45b2e1461013a57806308409d771461015c578063092ae4dc1461019257806345d999e5146101b257806346355931146101d257610135565b3661013557005b600080fd5b34801561014657600080fd5b5061015a61015536600461168c565b6103bd565b005b34801561016857600080fd5b5061017c61017736600461168c565b6104cd565b60405161018991906118e9565b60405180910390f35b34801561019e57600080fd5b5061015a6101ad366004611703565b6104eb565b3480156101be57600080fd5b5061015a6101cd36600461168c565b6105c2565b3480156101de57600080fd5b5061015a6101ed36600461168c565b6106b7565b3480156101fe57600080fd5b5061015a61020d366004611703565b6107ab565b34801561021e57600080fd5b5061015a61022d3660046117d3565b6108b9565b34801561023e57600080fd5b5061015a61024d36600461168c565b610962565b34801561025e57600080fd5b5061015a61026d366004611743565b610a4d565b34801561027e57600080fd5b5061015a610aeb565b34801561029357600080fd5b5061029c610b74565b6040516101899190611cf8565b3480156102b557600080fd5b5061017c6102c4366004611743565b610b7a565b3480156102d557600080fd5b506102de610d93565b604051610189919061185d565b61015a6102f936600461176e565b610db7565b34801561030a57600080fd5b506102de610e25565b34801561031f57600080fd5b5061015a61032e3660046116cb565b610e34565b34801561033f57600080fd5b506102de611217565b34801561035457600080fd5b506102de61123b565b34801561036957600080fd5b5061017c61037836600461168c565b61124a565b34801561038957600080fd5b5061015a61039836600461168c565b611268565b3480156103a957600080fd5b5061015a6103b836600461168c565b611359565b6103c5611419565b6001600160a01b03166103d6610e25565b6001600160a01b0316146104055760405162461bcd60e51b81526004016103fc90611aa1565b60405180910390fd5b600260015414156104285760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0382166000908152602091909152604090205460ff16156104695760405162461bcd60e51b81526004016103fc906119c0565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f4b8552befb3575c2944a1c44b568d5e87187e79de48331fd45ab251f09b281f4906104be9033908490611871565b60405180910390a15060018055565b6001600160a01b031660009081526003602052604090205460ff1690565b6104f3611419565b6001600160a01b0316610504610e25565b6001600160a01b03161461052a5760405162461bcd60e51b81526004016103fc90611aa1565b6001600160a01b0383166105505760405162461bcd60e51b81526004016103fc90611b45565b6001600160a01b03821661056f57504761056a338261141d565b61057a565b61057a8233836114af565b826001600160a01b03167f603c9f8bbe22d703e50963d4ec4d2aea4f7c8dd28de33bf36de740e5817fe31183836040516105b59291906118af565b60405180910390a2505050565b6105ca611419565b6001600160a01b03166105db610e25565b6001600160a01b0316146106015760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156106245760405162461bcd60e51b81526004016103fc90611c6d565b60026001556001600160a01b03811660009081526003602052604090205460ff16156106625760405162461bcd60e51b81526004016103fc906119c0565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517f900809311d03ed855b3a322b8e963ca5b93bb69992987393e671eda26bec59e1906104be9033908490611871565b6106bf611419565b6001600160a01b03166106d0610e25565b6001600160a01b0316146106f65760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156107195760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0382166000908152602091909152604090205460ff166107595760405162461bcd60e51b81526004016103fc90611b1c565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517ff243657fe92d46df5f68763dd9f8e707b4d09bfc34409b17fbf1433a52141802906104be9033908490611871565b6004546001600160a01b031633146107d55760405162461bcd60e51b81526004016103fc90611963565b6040516370a0823160e01b815281906001600160a01b038416906370a082319061080390309060040161185d565b60206040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085391906117eb565b10156108715760405162461bcd60e51b81526004016103fc90611a5e565b61087c8284836114af565b336001600160a01b03167ff808703b6316618a6ee95fff3bf2181070b23daeec601dc3c6ef8b1869c65d0b8484846040516105b59392919061188b565b6108c1611419565b6001600160a01b03166108d2610e25565b6001600160a01b0316146108f85760405162461bcd60e51b81526004016103fc90611aa1565b80600554141561091a5760405162461bcd60e51b81526004016103fc90611ad6565b60058054908290556040517f6367ada99aef7b7824e0f36eb959bb76fc70738ef3bfd8e5c655a3c61ff2281890610956903390849086906118c8565b60405180910390a15050565b61096a611419565b6001600160a01b031661097b610e25565b6001600160a01b0316146109a15760405162461bcd60e51b81526004016103fc90611aa1565b6004546001600160a01b03828116911614156109cf5760405162461bcd60e51b81526004016103fc90611989565b6001600160a01b0381166109f55760405162461bcd60e51b81526004016103fc90611a38565b600480546001600160a01b0319166001600160a01b0383161790556040517ff6b99d0f2b141c9cb65850bcc5e4e65803781156968314aebb7367321f1c8a3990610a429033908490611871565b60405180910390a150565b6004546001600160a01b03163314610a775760405162461bcd60e51b81526004016103fc90611963565b80471015610a975760405162461bcd60e51b81526004016103fc90611a5e565b610aa1828261141d565b336001600160a01b03167ff808703b6316618a6ee95fff3bf2181070b23daeec601dc3c6ef8b1869c65d0b83600084604051610adf9392919061188b565b60405180910390a25050565b610af3611419565b6001600160a01b0316610b04610e25565b6001600160a01b031614610b2a5760405162461bcd60e51b81526004016103fc90611aa1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60055481565b6001600160a01b03821660009081526002602052604081205460ff16610bb25760405162461bcd60e51b81526004016103fc90611bbc565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415610bf5575081610ce1565b6001600160a01b038085166000908152600660205260409020541680610c2d5760405162461bcd60e51b81526004016103fc90611bf1565b6001600160a01b038516610c5f577f000000000000000000000000000000000000000000000000000000000000000094505b604051633ddac95360e01b81526001600160a01b03821690633ddac95390610c8d90889088906004016118af565b60206040518083038186803b158015610ca557600080fd5b505afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd91906117eb565b9150505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3a57600080fd5b505afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190611803565b610d7d90600a611d47565b600554610d8a9190611e18565b10159392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b03163314610de15760405162461bcd60e51b81526004016103fc90611963565b6001600160a01b038416610e1357823414610e0e5760405162461bcd60e51b81526004016103fc906118f4565b610e1f565b610e1f8433308661159c565b50505050565b6000546001600160a01b031690565b610e3c611419565b6001600160a01b0316610e4d610e25565b6001600160a01b031614610e735760405162461bcd60e51b81526004016103fc90611aa1565b60026001541415610e965760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0383166000908152602091909152604090205460ff16610ed65760405162461bcd60e51b81526004016103fc90611bbc565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f1357600080fd5b505af1158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906116af565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f8a57600080fd5b505af1158015610f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc291906116af565b90506001600160a01b0384166110dd577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614801561104457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b806110bc57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161480156110bc57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b6110d85760405162461bcd60e51b81526004016103fc90611c36565b6111a3565b836001600160a01b0316826001600160a01b031614801561112f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b8061118757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161480156111875750836001600160a01b0316816001600160a01b0316145b6111a35760405162461bcd60e51b81526004016103fc90611c36565b6001600160a01b038481166000818152600660205260409081902080546001600160a01b0319169387169390931790925590517f51b67444bfcd9519022e35fa60ea42fcd1e7d1bd133e78492fc40e65fc653a38906112059086903390611871565b60405180910390a25050600180555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b611270611419565b6001600160a01b0316611281610e25565b6001600160a01b0316146112a75760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156112ca5760405162461bcd60e51b81526004016103fc90611c6d565b60026001556001600160a01b03811660009081526003602052604090205460ff166113075760405162461bcd60e51b81526004016103fc90611b1c565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fbdbdc6b1de4a38b46320e6e465b6f0125fa919c9a3400a8d57b4a27434c50521906104be9033908490611871565b611361611419565b6001600160a01b0316611372610e25565b6001600160a01b0316146113985760405162461bcd60e51b81526004016103fc90611aa1565b6001600160a01b0381166113be5760405162461bcd60e51b81526004016103fc9061191d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b0384169083906040516114479190611824565b60006040518083038185875af1925050503d8060008114611484576040519150601f19603f3d011682016040523d82523d6000602084013e611489565b606091505b50509050806114aa5760405162461bcd60e51b81526004016103fc90611ca4565b505050565b600080846001600160a01b031663a9059cbb85856040516024016114d49291906118af565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161150d9190611824565b6000604051808303816000865af19150503d806000811461154a576040519150601f19603f3d011682016040523d82523d6000602084013e61154f565b606091505b509150915081801561157957508051158061157957508080602001905181019061157991906117b7565b6115955760405162461bcd60e51b81526004016103fc906119eb565b5050505050565b600080856001600160a01b03166323b872dd8686866040516024016115c39392919061188b565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516115fc9190611824565b6000604051808303816000865af19150503d8060008114611639576040519150601f19603f3d011682016040523d82523d6000602084013e61163e565b606091505b509150915081801561166857508051158061166857508080602001905181019061166891906117b7565b6116845760405162461bcd60e51b81526004016103fc90611b6b565b505050505050565b60006020828403121561169d578081fd5b81356116a881611e4d565b9392505050565b6000602082840312156116c0578081fd5b81516116a881611e4d565b600080604083850312156116dd578081fd5b82356116e881611e4d565b915060208301356116f881611e4d565b809150509250929050565b600080600060608486031215611717578081fd5b833561172281611e4d565b9250602084013561173281611e4d565b929592945050506040919091013590565b60008060408385031215611755578182fd5b823561176081611e4d565b946020939093013593505050565b60008060008060808587031215611783578081fd5b843561178e81611e4d565b9350602085013592506040850135915060608501356117ac81611e65565b939692955090935050565b6000602082840312156117c8578081fd5b81516116a881611e65565b6000602082840312156117e4578081fd5b5035919050565b6000602082840312156117fc578081fd5b5051919050565b600060208284031215611814578081fd5b815160ff811681146116a8578182fd5b60008251815b81811015611844576020818601810151858301520161182a565b818111156118525782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6020808252600f908201526e57726f6e67206d73672e76616c756560881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600c908201526b2737ba1031b7b739bab6b2b960a11b604082015260600190565b60208082526017908201527f416c72656164792073657420617320636f6e73756d6572000000000000000000604082015260600190565b602080825260119082015270416c726561647920617661696c61626c6560781b604082015260600190565b6020808252602d908201527f54726962654f6e6548656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b6020808252600c908201526b5a45524f5f4144445245535360a01b604082015260600190565b60208082526023908201527f4173736574204d616e616765723a20496e73756666696369656e742062616c616040820152626e636560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f41737365744d616e616765723a204e65772076616c75652069732073616d6520604082015265185cc81bdb1960d21b606082015260800190565b6020808252600f908201526e105b1c9958591e481c995b5bdd9959608a1b604082015260600190565b6020808252600c908201526b5a45524f204164647265737360a01b604082015260600190565b60208082526031908201527f54726962654f6e6548656c7065723a3a7472616e7366657246726f6d3a207472604082015270185b9cd9995c919c9bdb4819985a5b1959607a1b606082015260800190565b6020808252818101527f41737365744d616e616765723a20496e76616c6964206c6f616e206173736574604082015260600190565b60208082526025908201527f41737365744d616e616765723a2054776170206f7261636c6520776173206e6f6040820152641d081cd95d60da1b606082015260800190565b6020808252601a908201527f41737365744d616e616765723a20496e76616c69642074776170000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526034908201527f54726962654f6e6548656c7065723a3a736166655472616e736665724554483a60408201527308115512081d1c985b9cd9995c8819985a5b195960621b606082015260800190565b90815260200190565b80825b6001808611611d135750611d3e565b818704821115611d2557611d25611e37565b80861615611d3257918102915b9490941c938002611d04565b94509492505050565b60006116a860001960ff851684600082611d63575060016116a8565b81611d70575060006116a8565b8160018114611d865760028114611d9057611dbd565b60019150506116a8565b60ff841115611da157611da1611e37565b6001841b915084821115611db757611db7611e37565b506116a8565b5060208310610133831016604e8410600b8410161715611df0575081810a83811115611deb57611deb611e37565b6116a8565b611dfd8484846001611d01565b808604821115611e0f57611e0f611e37565b02949350505050565b6000816000190483118215151615611e3257611e32611e37565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611e6257600080fd5b50565b8015158114611e6257600080fdfea2646970667358221220537616ad21c1b13211b4ca274125f1f67d21acb4df4bdc0be349a7e8b65e8dde64736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061012e5760003560e01c80637cad9f80116100ab578063a80c0fcb1161006f578063a80c0fcb14610313578063ad5c464814610333578063b4fd729614610348578063cc1657411461035d578063e9ad871c1461037d578063f2fde38b1461039d57610135565b80637cad9f801461028757806384bc2109146102a957806389a30271146102c95780638d12bec0146102eb5780638da5cb5b146102fe57610135565b80634965162a116100f25780634965162a146101f25780635a59fe121461021257806363a579d5146102325780636f59503f14610252578063715018a61461027257610135565b806303a45b2e1461013a57806308409d771461015c578063092ae4dc1461019257806345d999e5146101b257806346355931146101d257610135565b3661013557005b600080fd5b34801561014657600080fd5b5061015a61015536600461168c565b6103bd565b005b34801561016857600080fd5b5061017c61017736600461168c565b6104cd565b60405161018991906118e9565b60405180910390f35b34801561019e57600080fd5b5061015a6101ad366004611703565b6104eb565b3480156101be57600080fd5b5061015a6101cd36600461168c565b6105c2565b3480156101de57600080fd5b5061015a6101ed36600461168c565b6106b7565b3480156101fe57600080fd5b5061015a61020d366004611703565b6107ab565b34801561021e57600080fd5b5061015a61022d3660046117d3565b6108b9565b34801561023e57600080fd5b5061015a61024d36600461168c565b610962565b34801561025e57600080fd5b5061015a61026d366004611743565b610a4d565b34801561027e57600080fd5b5061015a610aeb565b34801561029357600080fd5b5061029c610b74565b6040516101899190611cf8565b3480156102b557600080fd5b5061017c6102c4366004611743565b610b7a565b3480156102d557600080fd5b506102de610d93565b604051610189919061185d565b61015a6102f936600461176e565b610db7565b34801561030a57600080fd5b506102de610e25565b34801561031f57600080fd5b5061015a61032e3660046116cb565b610e34565b34801561033f57600080fd5b506102de611217565b34801561035457600080fd5b506102de61123b565b34801561036957600080fd5b5061017c61037836600461168c565b61124a565b34801561038957600080fd5b5061015a61039836600461168c565b611268565b3480156103a957600080fd5b5061015a6103b836600461168c565b611359565b6103c5611419565b6001600160a01b03166103d6610e25565b6001600160a01b0316146104055760405162461bcd60e51b81526004016103fc90611aa1565b60405180910390fd5b600260015414156104285760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0382166000908152602091909152604090205460ff16156104695760405162461bcd60e51b81526004016103fc906119c0565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f4b8552befb3575c2944a1c44b568d5e87187e79de48331fd45ab251f09b281f4906104be9033908490611871565b60405180910390a15060018055565b6001600160a01b031660009081526003602052604090205460ff1690565b6104f3611419565b6001600160a01b0316610504610e25565b6001600160a01b03161461052a5760405162461bcd60e51b81526004016103fc90611aa1565b6001600160a01b0383166105505760405162461bcd60e51b81526004016103fc90611b45565b6001600160a01b03821661056f57504761056a338261141d565b61057a565b61057a8233836114af565b826001600160a01b03167f603c9f8bbe22d703e50963d4ec4d2aea4f7c8dd28de33bf36de740e5817fe31183836040516105b59291906118af565b60405180910390a2505050565b6105ca611419565b6001600160a01b03166105db610e25565b6001600160a01b0316146106015760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156106245760405162461bcd60e51b81526004016103fc90611c6d565b60026001556001600160a01b03811660009081526003602052604090205460ff16156106625760405162461bcd60e51b81526004016103fc906119c0565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517f900809311d03ed855b3a322b8e963ca5b93bb69992987393e671eda26bec59e1906104be9033908490611871565b6106bf611419565b6001600160a01b03166106d0610e25565b6001600160a01b0316146106f65760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156107195760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0382166000908152602091909152604090205460ff166107595760405162461bcd60e51b81526004016103fc90611b1c565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517ff243657fe92d46df5f68763dd9f8e707b4d09bfc34409b17fbf1433a52141802906104be9033908490611871565b6004546001600160a01b031633146107d55760405162461bcd60e51b81526004016103fc90611963565b6040516370a0823160e01b815281906001600160a01b038416906370a082319061080390309060040161185d565b60206040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085391906117eb565b10156108715760405162461bcd60e51b81526004016103fc90611a5e565b61087c8284836114af565b336001600160a01b03167ff808703b6316618a6ee95fff3bf2181070b23daeec601dc3c6ef8b1869c65d0b8484846040516105b59392919061188b565b6108c1611419565b6001600160a01b03166108d2610e25565b6001600160a01b0316146108f85760405162461bcd60e51b81526004016103fc90611aa1565b80600554141561091a5760405162461bcd60e51b81526004016103fc90611ad6565b60058054908290556040517f6367ada99aef7b7824e0f36eb959bb76fc70738ef3bfd8e5c655a3c61ff2281890610956903390849086906118c8565b60405180910390a15050565b61096a611419565b6001600160a01b031661097b610e25565b6001600160a01b0316146109a15760405162461bcd60e51b81526004016103fc90611aa1565b6004546001600160a01b03828116911614156109cf5760405162461bcd60e51b81526004016103fc90611989565b6001600160a01b0381166109f55760405162461bcd60e51b81526004016103fc90611a38565b600480546001600160a01b0319166001600160a01b0383161790556040517ff6b99d0f2b141c9cb65850bcc5e4e65803781156968314aebb7367321f1c8a3990610a429033908490611871565b60405180910390a150565b6004546001600160a01b03163314610a775760405162461bcd60e51b81526004016103fc90611963565b80471015610a975760405162461bcd60e51b81526004016103fc90611a5e565b610aa1828261141d565b336001600160a01b03167ff808703b6316618a6ee95fff3bf2181070b23daeec601dc3c6ef8b1869c65d0b83600084604051610adf9392919061188b565b60405180910390a25050565b610af3611419565b6001600160a01b0316610b04610e25565b6001600160a01b031614610b2a5760405162461bcd60e51b81526004016103fc90611aa1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60055481565b6001600160a01b03821660009081526002602052604081205460ff16610bb25760405162461bcd60e51b81526004016103fc90611bbc565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415610bf5575081610ce1565b6001600160a01b038085166000908152600660205260409020541680610c2d5760405162461bcd60e51b81526004016103fc90611bf1565b6001600160a01b038516610c5f577f000000000000000000000000000000000000000000000000000000000000000094505b604051633ddac95360e01b81526001600160a01b03821690633ddac95390610c8d90889088906004016118af565b60206040518083038186803b158015610ca557600080fd5b505afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd91906117eb565b9150505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3a57600080fd5b505afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190611803565b610d7d90600a611d47565b600554610d8a9190611e18565b10159392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b03163314610de15760405162461bcd60e51b81526004016103fc90611963565b6001600160a01b038416610e1357823414610e0e5760405162461bcd60e51b81526004016103fc906118f4565b610e1f565b610e1f8433308661159c565b50505050565b6000546001600160a01b031690565b610e3c611419565b6001600160a01b0316610e4d610e25565b6001600160a01b031614610e735760405162461bcd60e51b81526004016103fc90611aa1565b60026001541415610e965760405162461bcd60e51b81526004016103fc90611c6d565b600260018190556001600160a01b0383166000908152602091909152604090205460ff16610ed65760405162461bcd60e51b81526004016103fc90611bbc565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f1357600080fd5b505af1158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906116af565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f8a57600080fd5b505af1158015610f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc291906116af565b90506001600160a01b0384166110dd577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614801561104457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b806110bc57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161480156110bc57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b6110d85760405162461bcd60e51b81526004016103fc90611c36565b6111a3565b836001600160a01b0316826001600160a01b031614801561112f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b8061118757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161480156111875750836001600160a01b0316816001600160a01b0316145b6111a35760405162461bcd60e51b81526004016103fc90611c36565b6001600160a01b038481166000818152600660205260409081902080546001600160a01b0319169387169390931790925590517f51b67444bfcd9519022e35fa60ea42fcd1e7d1bd133e78492fc40e65fc653a38906112059086903390611871565b60405180910390a25050600180555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b031690565b6001600160a01b031660009081526002602052604090205460ff1690565b611270611419565b6001600160a01b0316611281610e25565b6001600160a01b0316146112a75760405162461bcd60e51b81526004016103fc90611aa1565b600260015414156112ca5760405162461bcd60e51b81526004016103fc90611c6d565b60026001556001600160a01b03811660009081526003602052604090205460ff166113075760405162461bcd60e51b81526004016103fc90611b1c565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fbdbdc6b1de4a38b46320e6e465b6f0125fa919c9a3400a8d57b4a27434c50521906104be9033908490611871565b611361611419565b6001600160a01b0316611372610e25565b6001600160a01b0316146113985760405162461bcd60e51b81526004016103fc90611aa1565b6001600160a01b0381166113be5760405162461bcd60e51b81526004016103fc9061191d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b0384169083906040516114479190611824565b60006040518083038185875af1925050503d8060008114611484576040519150601f19603f3d011682016040523d82523d6000602084013e611489565b606091505b50509050806114aa5760405162461bcd60e51b81526004016103fc90611ca4565b505050565b600080846001600160a01b031663a9059cbb85856040516024016114d49291906118af565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161150d9190611824565b6000604051808303816000865af19150503d806000811461154a576040519150601f19603f3d011682016040523d82523d6000602084013e61154f565b606091505b509150915081801561157957508051158061157957508080602001905181019061157991906117b7565b6115955760405162461bcd60e51b81526004016103fc906119eb565b5050505050565b600080856001600160a01b03166323b872dd8686866040516024016115c39392919061188b565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516115fc9190611824565b6000604051808303816000865af19150503d8060008114611639576040519150601f19603f3d011682016040523d82523d6000602084013e61163e565b606091505b509150915081801561166857508051158061166857508080602001905181019061166891906117b7565b6116845760405162461bcd60e51b81526004016103fc90611b6b565b505050505050565b60006020828403121561169d578081fd5b81356116a881611e4d565b9392505050565b6000602082840312156116c0578081fd5b81516116a881611e4d565b600080604083850312156116dd578081fd5b82356116e881611e4d565b915060208301356116f881611e4d565b809150509250929050565b600080600060608486031215611717578081fd5b833561172281611e4d565b9250602084013561173281611e4d565b929592945050506040919091013590565b60008060408385031215611755578182fd5b823561176081611e4d565b946020939093013593505050565b60008060008060808587031215611783578081fd5b843561178e81611e4d565b9350602085013592506040850135915060608501356117ac81611e65565b939692955090935050565b6000602082840312156117c8578081fd5b81516116a881611e65565b6000602082840312156117e4578081fd5b5035919050565b6000602082840312156117fc578081fd5b5051919050565b600060208284031215611814578081fd5b815160ff811681146116a8578182fd5b60008251815b81811015611844576020818601810151858301520161182a565b818111156118525782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6020808252600f908201526e57726f6e67206d73672e76616c756560881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600c908201526b2737ba1031b7b739bab6b2b960a11b604082015260600190565b60208082526017908201527f416c72656164792073657420617320636f6e73756d6572000000000000000000604082015260600190565b602080825260119082015270416c726561647920617661696c61626c6560781b604082015260600190565b6020808252602d908201527f54726962654f6e6548656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b6020808252600c908201526b5a45524f5f4144445245535360a01b604082015260600190565b60208082526023908201527f4173736574204d616e616765723a20496e73756666696369656e742062616c616040820152626e636560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f41737365744d616e616765723a204e65772076616c75652069732073616d6520604082015265185cc81bdb1960d21b606082015260800190565b6020808252600f908201526e105b1c9958591e481c995b5bdd9959608a1b604082015260600190565b6020808252600c908201526b5a45524f204164647265737360a01b604082015260600190565b60208082526031908201527f54726962654f6e6548656c7065723a3a7472616e7366657246726f6d3a207472604082015270185b9cd9995c919c9bdb4819985a5b1959607a1b606082015260800190565b6020808252818101527f41737365744d616e616765723a20496e76616c6964206c6f616e206173736574604082015260600190565b60208082526025908201527f41737365744d616e616765723a2054776170206f7261636c6520776173206e6f6040820152641d081cd95d60da1b606082015260800190565b6020808252601a908201527f41737365744d616e616765723a20496e76616c69642074776170000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526034908201527f54726962654f6e6548656c7065723a3a736166655472616e736665724554483a60408201527308115512081d1c985b9cd9995c8819985a5b195960621b606082015260800190565b90815260200190565b80825b6001808611611d135750611d3e565b818704821115611d2557611d25611e37565b80861615611d3257918102915b9490941c938002611d04565b94509492505050565b60006116a860001960ff851684600082611d63575060016116a8565b81611d70575060006116a8565b8160018114611d865760028114611d9057611dbd565b60019150506116a8565b60ff841115611da157611da1611e37565b6001841b915084821115611db757611db7611e37565b506116a8565b5060208310610133831016604e8410600b8410161715611df0575081810a83811115611deb57611deb611e37565b6116a8565b611dfd8484846001611d01565b808604821115611e0f57611e0f611e37565b02949350505050565b6000816000190483118215151615611e3257611e32611e37565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611e6257600080fd5b50565b8015158114611e6257600080fdfea2646970667358221220537616ad21c1b13211b4ca274125f1f67d21acb4df4bdc0be349a7e8b65e8dde64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 120,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4450,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "availableLoanAsset",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4454,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "availableCollateralAsset",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4456,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_consumer",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 4459,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "automaticLoanLimit",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4467,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "twapOracles",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}